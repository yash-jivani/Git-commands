git init : 
    Initialize git repo

git status :
    show status

git add --a OR git add . :
    add all files to stage 

git add <fileName> :
    add <fileName> to stage

git commit -m 'commit msg' :
    commit changes

git log :
    show all commit history

git clone <link>: 
    clone repo to local machine

git diff :
    compare stage area with working area ( stage code/area vs modified code/area )

git diff --staged :
    compare last commit with current stage area

git commit -a -m 'direct commit' :
    direct commit without stage area (only for tracked files {modified/edited file})

git rm <fileName> :
    remove file 

git mv <old-fileName> <new-fileName> :
    rename file

git rm --cached <fileName> :
    for untracking file 
  senario : 
        gitignore me sirf "untracked file" mention hoti hai (jisko ignore karna hai)
        ..."tracked file" ko gitignore me dalne se koi changes nhi hoge (file ignore nhi hogi)
        ...ager file "tracked" hai aur usse "untracked" karke gitignore me mention karna hai 
        ...tab isss command ka use hota hai

git log :
    display commit history

git log -<GvnNum> :
    display last GvnNum commits 

git log --stat :
    short summary of commits

git log --pretty=oneline :
    display commit-code and commit-msg

git log --pretty=short :
    display commit author, commit-code, commit msg

git log --since=2.days :
    display commits of last 2 days

git log --since=2.weeks :
    display commits of last 2 weeks

git log --since=2.months :
    display commits of last 2 months

git log --since=2.years :
    display commits of last 2 years

git commit --amend :
    modify marge code + commit msg
    
git restore --staged <fileName> :
    unstage file

git checkout -- <FileName> OR git restore <fileName> :
    modify file to PREVIOUS commit (only for unstaged files {before git add command} )

git checkout -f :
    modify all file to PREVIOUS commit

git remote add <remoteName> <URL> :
    add/create remote

git config --global alias.<aliasName> '<command>'
    for creating alias
    example : 
        git config --global alias.cmt 'commit' 
        command -> git cmt -m 'msg'

git branch :
    display branch

git checkout -b <branchName> :
    create & switch to <branchName>

git checkout <branchName> :
    switch to <branchName> branch
    NOTE : create ki hui 'branch me changes ko commit nhi kya hoga'...
            ...to vo file/dirs 'master branch me bhi show karenge'

git marge <branchName> :
    marge branch with working(current) branch

git branch -v :
    display all branch with lastcommit, commit hash and commit msg

git branch -d <branchName> :
    delete branch (gives err if brach is not merged)

git branch -D <branchName> :
    delete branch (gives no err) 

git push <remoteName> <branchName> :
    push branch 
    example : 
        git checkout <brachName> 
        git push origin <brachName>

git push <remoteName> <brachName> :
    delete branch on server
    example :
        git push -d origin <branchName>